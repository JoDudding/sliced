"0","xgboost_workflow <- "
"0","  workflow() %>% "
"0","  add_recipe(xgboost_recipe) %>% "
"0","  add_model(xgboost_spec) "
"0",""
"0","xgboost_workflow  "
"1","══ Workflow ═══════════════════════════════════════════════════════════"
"1",""
"1","
"
"1","[3mPreprocessor:[23m Recipe"
"1",""
"1","
"
"1","[3mModel:[23m boost_tree()"
"1",""
"1","
"
"1",""
"1",""
"1","
"
"1","── Preprocessor ───────────────────────────────────────────────────────"
"1",""
"1","
"
"1","10 Recipe Steps"
"1",""
"1","
"
"1",""
"1",""
"1","
"
"1","• step_upsample()
• step_mutate()
• step_string2factor()
• step_other()
• step_log()
• step_rm()
• step_impute_knn()
• step_novel()
• step_dummy()
• step_zv()"
"1",""
"1","
"
"1",""
"1",""
"1","
"
"1","── Model ──────────────────────────────────────────────────────────────"
"1",""
"1","
"
"1","Boosted Tree Model Specification ("
"1",""
"1","classification"
"1",""
"1",")

"
"1","Main Arguments:
"
"1","  trees = tune()
"
"1",""
"1","  min_n = tune()
"
"1",""
"1","  tree_depth = tune()
"
"1",""
"1","  learn_rate = tune()
"
"1",""
"1","  loss_reduction = tune()
"
"1",""
"1","  sample_size = tune()
"
"1",""
"1","
"
"1","Computational engine:"
"1"," "
"1","xgboost"
"1"," "
"1","

"
